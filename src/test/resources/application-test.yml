micronaut:
  application:
    name: mmo_server
  server:
    port: 8081
  router:
    static-resources:
      default:
        enabled: true
        mapping: /**
        paths: classpath:public
  executors:
    consumer:
      type: fixed
      nThreads: 15
jackson:
  serialization:
    writeDatesAsTimestamps: false
jpa:
  default:
    entity-scan:
      classpath: true
      packages:
        - 'com.org.mmo_server.repository.model'

mongodb:
  #  Set username/password as env vars
  uri: mongodb://mongo_mmo_server:mongo_password@localhost:27017/mmo_server?authSource=admin
  options:
    maxConnectionIdleTime: 10000
    readConcern: majority
  #  For reactive MongoDB driver:
  cluster:
    maxWaitQueueSize: 5
  connectionPool:
    maxSize: 20

# MongoDB collections
mongo-database:
  database-name: "mmo-server"
  player-character-collection: "characters"
  items-collection: "items"
  item-instances-collection: "item-instances"
  dropped-items-collection: "dropped-items"
  inventory-collection: "inventory"
  equip-collection: "equip"
  player-attributes: "playerAttributes"
  player-motion: "playerMotion"
  mob-instance: "mobInstance"
  mob-attributes: "mobAttributes"
  actor-stats: "actorStats"
  actor-status: "actorStatus"
  actor-skills: "actorSkills"
  actionbar: "actionbar"
  actorThreat: "actorThreat"
  actorTalents: "actorTalents"
