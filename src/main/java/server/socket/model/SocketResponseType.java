package server.socket.model;

import lombok.AllArgsConstructor;
import lombok.Getter;

@Getter
@AllArgsConstructor
public enum SocketResponseType {
    PLAYER_APPEARANCE("PLAYER_APPEARANCE"),
    REMOVE_PLAYERS("REMOVE_PLAYERS"),
    PLAYER_MOTION_UPDATE("PLAYER_MOTION_UPDATE"),
    MOB_MOTION_UPDATE("MOB_MOTION_UPDATE"),
    REMOVE_MOBS("REMOVE_MOBS"),
    ADD_ITEMS_TO_MAP("ADD_ITEMS_TO_MAP"),
    REMOVE_ITEMS_FROM_MAP("REMOVE_ITEMS_FROM_MAP"),
    INVENTORY_UPDATE("INVENTORY_UPDATE"),
    ADD_EQUIP_ITEM("ADD_EQUIP_ITEM"),
    REMOVE_EQUIP_ITEM("REMOVE_EQUIP_ITEM"),
    INVENTORY_ERROR("INVENTORY_ERROR"),
    STATS_UPDATE("STATS_UPDATE"),
    DAMAGE_UPDATE("DAMAGE_UPDATE"),
    STATUS_UPDATE("STATUS_UPDATE"),

    // skill updates
    ALL_ACTOR_SKILLS("ALL_ACTOR_SKILLS"),
    AVAILABLE_ACTOR_SKILLS("AVAILABLE_ACTOR_SKILLS"),
    UPDATE_ACTOR_SKILLS("UPDATE_ACTOR_SKILLS"),

    // talent updates
    ALL_TALENTS("ALL_TALENTS"),
    AVAILABLE_TALENTS("AVAILABLE_TALENTS"),
    LEARNED_TALENTS("LEARNED_TALENTS"),

    UPDATE_DERIVED_ATTRIBUTES("UPDATE_DERIVED_ATTRIBUTES"),
    INITIATE_ATTACK("INITIATE_ATTACK"),

    // TODO: Make a 'COMBAT_WARN' response type for these and put these into custom_data
    COMBAT_TOO_FAR("COMBAT_TOO_FAR"),
    COMBAT_NOT_FACING("COMBAT_NOT_FACING"),
    SKILL_ON_CD("SKILL_ON_CD"),

    UPDATE_ACTIONBAR("UPDATE_ACTIONBAR"),

    PLAYER_NOTIFICATION("PLAYER_NOTIFICATION"),

    NOTIFY_ERROR_MESSAGE("NOTIFY_ERROR_MESSAGE"),

    THREAT_UPDATE("THREAT_UPDATE"),
    FORCE_UPDATE_MOTION("FORCE_UPDATE_MOTION");

    public final String type;
}
